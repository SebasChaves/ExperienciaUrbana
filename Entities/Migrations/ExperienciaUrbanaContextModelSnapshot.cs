// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ExperienciaUrbanaContext))]
    partial class ExperienciaUrbanaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.ActividadesPorHacer", b =>
                {
                    b.Property<int>("ActividadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActividadID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActividadId"), 1L, 1);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Realizada")
                        .HasColumnType("bit");

                    b.HasKey("ActividadId")
                        .HasName("PK__Activida__981483F074BDC49B");

                    b.ToTable("ActividadesPorHacer", (string)null);
                });

            modelBuilder.Entity("Entities.ComentariosLugare", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComentarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"), 1L, 1);

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaComentario")
                        .HasColumnType("date");

                    b.Property<int?>("LugarId")
                        .HasColumnType("int")
                        .HasColumnName("LugarID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ComentarioId")
                        .HasName("PK__Comentar__F1844958B399EC7F");

                    b.HasIndex("LugarId");

                    b.HasIndex("UserId");

                    b.ToTable("ComentariosLugares", (string)null);
                });

            modelBuilder.Entity("Entities.ComentariosRestaurante", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComentarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"), 1L, 1);

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaComentario")
                        .HasColumnType("date");

                    b.Property<int?>("RestauranteId")
                        .HasColumnType("int")
                        .HasColumnName("RestauranteID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ComentarioId")
                        .HasName("PK__Comentar__F1844958D3EFAD3E");

                    b.HasIndex("RestauranteId");

                    b.HasIndex("UserId");

                    b.ToTable("ComentariosRestaurantes", (string)null);
                });

            modelBuilder.Entity("Entities.Lugare", b =>
                {
                    b.Property<int>("LugarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LugarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LugarId"), 1L, 1);

                    b.Property<double?>("Calificacion")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LugarId")
                        .HasName("PK__Lugares__1BDE0D80D0D0F7AC");

                    b.ToTable("Lugares", (string)null);
                });

            modelBuilder.Entity("Entities.PeliculaSerie", b =>
                {
                    b.Property<int>("PeliculaSerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PeliculaSerieID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaSerieId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("FechaEstreno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("PeliculaSerieId");

                    b.ToTable("PeliculaSerie", (string)null);
                });

            modelBuilder.Entity("Entities.Restaurante", b =>
                {
                    b.Property<int>("RestauranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RestauranteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestauranteId"), 1L, 1);

                    b.Property<double?>("Calificacion")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RestauranteId");

                    b.ToTable("Restaurantes", (string)null);
                });

            modelBuilder.Entity("Entities.Usuario", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Usuarios__1788CCACC3AB795C");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Entities.UsuariosActividade", b =>
                {
                    b.Property<int?>("ActividadId")
                        .HasColumnType("int")
                        .HasColumnName("ActividadID");

                    b.Property<DateTime?>("FechaRealizacion")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasIndex("ActividadId");

                    b.HasIndex("UserId");

                    b.ToTable("UsuariosActividades", (string)null);
                });

            modelBuilder.Entity("Entities.ComentariosLugare", b =>
                {
                    b.HasOne("Entities.Lugare", "Lugar")
                        .WithMany("ComentariosLugares")
                        .HasForeignKey("LugarId")
                        .HasConstraintName("FK__Comentari__Lugar__2E1BDC42");

                    b.HasOne("Entities.Usuario", "User")
                        .WithMany("ComentariosLugares")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comentari__UserI__2F10007B");

                    b.Navigation("Lugar");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.ComentariosRestaurante", b =>
                {
                    b.HasOne("Entities.Restaurante", "Restaurante")
                        .WithMany("ComentariosRestaurantes")
                        .HasForeignKey("RestauranteId")
                        .HasConstraintName("FK__Comentari__Resta__286302EC");

                    b.HasOne("Entities.Usuario", "User")
                        .WithMany("ComentariosRestaurantes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comentari__UserI__29572725");

                    b.Navigation("Restaurante");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.UsuariosActividade", b =>
                {
                    b.HasOne("Entities.ActividadesPorHacer", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .HasConstraintName("FK__UsuariosA__Activ__33D4B598");

                    b.HasOne("Entities.Usuario", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UsuariosA__UserI__32E0915F");

                    b.Navigation("Actividad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Lugare", b =>
                {
                    b.Navigation("ComentariosLugares");
                });

            modelBuilder.Entity("Entities.Restaurante", b =>
                {
                    b.Navigation("ComentariosRestaurantes");
                });

            modelBuilder.Entity("Entities.Usuario", b =>
                {
                    b.Navigation("ComentariosLugares");

                    b.Navigation("ComentariosRestaurantes");
                });
#pragma warning restore 612, 618
        }
    }
}
